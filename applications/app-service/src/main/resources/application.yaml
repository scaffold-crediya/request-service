server:
  port: 8081
spring:
  application:
    name: "request-service"
  r2dbc:
    host: ${SPRING_R2DBC_HOST:localhost}
    port: ${SPRING_R2DBC_PORT:5433}
    database: ${SPRING_R2DBC_DATABASE:crediya_request}
    schema: public
    username: ${SPRING_R2DBC_USERNAME:jhompo}
    password: ${SPRING_R2DBC_PASSWORD:pass123}
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  profiles:
    include: null

  # Configuración para Gmail
  mail:
    host: smtp.gmail.com
    default-encoding: UTF-8
    port: 587
    username: ${EMAIL_USERNAME:jhompocr@gmail.com}
    password: ${EMAIL_PASSWORD:rosa vijg vmhi cnov}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    debug: false

management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"
microservices:
  autenticacion:
    url: ${AUTH_APP_URL:http://localhost:8080}
security:
  jwt:
    # Genera una clave secreta segura, por ejemplo, con un generador online
    secret-key: "VGhpcy1Jcy1BLVNlY3JldC1LZXktRm9yLUpyZWRpdG9zLVNlcnZpY2U="
    # Expiración en milisegundos (ej. 1 hora)
    expiration-time: 3600000
logging:
  level:
    io.r2dbc.postgresql: DEBUG
    org.springframework.r2dbc.core: DEBUG
    org.springframework.data.r2dbc: DEBUG


  
  # Plantillas de correo

    
aws:
  sqs:
    queue-url: "https://sqs.us-east-1.amazonaws.com/771174006840/queue-approvals-requests"

