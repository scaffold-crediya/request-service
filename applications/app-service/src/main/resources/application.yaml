server:
  port: 8081
spring:
  application:
    name: "request-service"
  r2dbc:
    host: localhost
    port: 5433
    database: crediya_request
    schema: public
    username: jhompo
    password: pass123
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  profiles:
    include: null
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"
microservices:
  autenticacion:
    url: "http://localhost:8080"
security:
  jwt:
    # Genera una clave secreta segura, por ejemplo, con un generador online
    secret-key: "VGhpcy1Jcy1BLVNlY3JldC1LZXktRm9yLUpyZWRpdG9zLVNlcnZpY2U="
    # Expiraci√≥n en milisegundos (ej. 1 hora)
    expiration-time: 3600000
logging:
  level:
    io.r2dbc.postgresql: DEBUG
    org.springframework.r2dbc.core: DEBUG
    org.springframework.data.r2dbc: DEBUG